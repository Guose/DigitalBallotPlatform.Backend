// <auto-generated />
using System;
using DigitalBallotPlatform.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalBallotPlatform.DataAccess.Migrations
{
    [DbContext(typeof(ElectionDbContext))]
    [Migration("20240709033916_InitialCreateElection")]
    partial class InitialCreateElection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.AddressModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSameAsBilling")
                        .HasColumnType("bit");

                    b.Property<string>("ShpAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShpAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShpCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShpState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShpZipcode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Address1 = "11310 S Lake Stevens Rd",
                            City = "Lake Stevens",
                            CompanyId = -1,
                            IsSameAsBilling = true,
                            State = "Washington",
                            Zipcode = 98258
                        },
                        new
                        {
                            Id = -2,
                            Address1 = "7632 SE Douglas Ave",
                            City = "Snoqualmie",
                            CountyId = -2,
                            IsSameAsBilling = false,
                            ShpAddress1 = "11310 S Lake Stevens Rd",
                            ShpCity = "Lake Stevens",
                            ShpState = "WA",
                            ShpZipcode = 98258,
                            State = "Washington",
                            Zipcode = 98065
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.BallotCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BallotSpecId")
                        .HasColumnType("int");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTestdeck")
                        .HasColumnType("bit");

                    b.Property<byte?>("LARotation")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("SubCategory")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("BallotSpecId");

                    b.ToTable("BallotCategories");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            BallotSpecId = -2,
                            Category = (byte)5,
                            Description = "Poll Ballot",
                            Enabled = false,
                            IsTestdeck = false
                        },
                        new
                        {
                            Id = -2,
                            BallotSpecId = -1,
                            Category = (byte)4,
                            Description = "Absentee Ballot",
                            Enabled = false,
                            IsTestdeck = false
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.BallotMaterialModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTextWeight")
                        .HasColumnType("bit");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("BallotMaterials");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CompanyId = -1,
                            IsTextWeight = true,
                            Weight = 90
                        },
                        new
                        {
                            Id = -2,
                            CompanyId = -1,
                            IsTextWeight = false,
                            Weight = 110
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.BallotSpecModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BallotMaterialId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDuplex")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTopStub")
                        .HasColumnType("bit");

                    b.Property<float>("Length")
                        .HasColumnType("real");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<float>("StubSize")
                        .HasColumnType("real");

                    b.Property<float>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BallotMaterialId");

                    b.ToTable("BallotSpecs");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            IsDuplex = false,
                            IsTopStub = true,
                            Length = 11f,
                            MaterialId = -2,
                            Pages = 1,
                            StubSize = 1f,
                            Width = 8.5f
                        },
                        new
                        {
                            Id = -2,
                            IsDuplex = false,
                            IsTopStub = true,
                            Length = 14f,
                            MaterialId = -1,
                            Pages = 2,
                            StubSize = 1f,
                            Width = 8.5f
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.CompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AddressId = -1,
                            CreatedAt = new DateTime(2024, 7, 8, 20, 39, 15, 625, DateTimeKind.Local).AddTicks(7777),
                            Name = "Roland"
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.CountyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<byte>("BallotTabulation")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("VoterReg")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AddressId = -2,
                            BallotTabulation = (byte)2,
                            Name = "King County Elections",
                            VoterReg = (byte)5
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.ElectionSetupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BallotSpecsId")
                        .HasColumnType("int");

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ElectionDate")
                        .HasColumnType("date");

                    b.Property<int?>("WatermarkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BallotSpecsId");

                    b.HasIndex("CountyId");

                    b.HasIndex("WatermarkId");

                    b.ToTable("ElectionSetups");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            BallotSpecsId = -2,
                            CountyId = -1,
                            Description = "General Election",
                            ElectionDate = new DateTime(2024, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.PartyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WatermarkColorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("WatermarkColorId");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Acronym = "REP",
                            ElectionId = -1,
                            Name = "Republican"
                        },
                        new
                        {
                            Id = -2,
                            Acronym = "DEM",
                            ElectionId = -1,
                            Name = "Democrat"
                        },
                        new
                        {
                            Id = -3,
                            Acronym = "LIB",
                            ElectionId = -1,
                            Name = "Libertarian"
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.PlatformUserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SecodaryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CountyId");

                    b.HasIndex("RoleId");

                    b.ToTable("PlatformUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba77670b-4254-4311-99de-6821ab8cb99f"),
                            CreatedAt = new DateTime(2024, 7, 8, 20, 39, 15, 625, DateTimeKind.Local).AddTicks(8204),
                            Email = "jjelder79@gmail.com",
                            Fullname = "Justin Elder",
                            Password = "5p3ctrum",
                            PrimaryPhone = "4259234362",
                            RoleId = -1,
                            Username = "Guose"
                        },
                        new
                        {
                            Id = new Guid("17866020-af79-4746-a98c-35f117c8d6dc"),
                            CreatedAt = new DateTime(2024, 7, 8, 20, 39, 15, 625, DateTimeKind.Local).AddTicks(8216),
                            Email = "cuggle1008@gmail.com",
                            Fullname = "Kathleen Lordan-Morris",
                            Password = "5p3ctrum",
                            PrimaryPhone = "4258022164",
                            RoleId = -2,
                            Username = "K-rad"
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyModelId")
                        .HasColumnType("int");

                    b.Property<int?>("CountyModelId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyModelId");

                    b.HasIndex("CountyModelId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "Admin",
                            Enabled = true,
                            Role = 0
                        },
                        new
                        {
                            Id = -2,
                            Description = "Contributor",
                            Enabled = true,
                            Role = 1
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.WatermarkColorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasHeaderFill")
                        .HasColumnType("bit");

                    b.Property<string>("Tint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WatermarkColors");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Color = "Orange",
                            HasHeaderFill = true,
                            Tint = "151"
                        },
                        new
                        {
                            Id = -2,
                            Color = "Blue",
                            HasHeaderFill = false,
                            Tint = "543"
                        },
                        new
                        {
                            Id = -3,
                            Color = "Brown",
                            HasHeaderFill = true,
                            Tint = "465"
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.WatermarkModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Watermarks");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "",
                            Name = "CAOutline"
                        },
                        new
                        {
                            Id = -2,
                            Description = "",
                            Name = "CASeal"
                        });
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.BallotCategoryModel", b =>
                {
                    b.HasOne("DigitalBallotPlatform.Shared.Models.BallotSpecModel", "BallotSpec")
                        .WithMany("BallotCategories")
                        .HasForeignKey("BallotSpecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BallotSpec");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.BallotMaterialModel", b =>
                {
                    b.HasOne("DigitalBallotPlatform.Shared.Models.CompanyModel", "Company")
                        .WithMany("BallotMaterials")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.BallotSpecModel", b =>
                {
                    b.HasOne("DigitalBallotPlatform.Shared.Models.BallotMaterialModel", "BallotMaterial")
                        .WithMany()
                        .HasForeignKey("BallotMaterialId");

                    b.Navigation("BallotMaterial");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.CompanyModel", b =>
                {
                    b.HasOne("DigitalBallotPlatform.Shared.Models.AddressModel", "Address")
                        .WithOne("Company")
                        .HasForeignKey("DigitalBallotPlatform.Shared.Models.CompanyModel", "AddressId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.CountyModel", b =>
                {
                    b.HasOne("DigitalBallotPlatform.Shared.Models.AddressModel", "Address")
                        .WithOne("County")
                        .HasForeignKey("DigitalBallotPlatform.Shared.Models.CountyModel", "AddressId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.ElectionSetupModel", b =>
                {
                    b.HasOne("DigitalBallotPlatform.Shared.Models.BallotSpecModel", "BallotSpec")
                        .WithMany("Elections")
                        .HasForeignKey("BallotSpecsId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DigitalBallotPlatform.Shared.Models.CountyModel", "County")
                        .WithMany("ElectionSetups")
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DigitalBallotPlatform.Shared.Models.WatermarkModel", "Watermark")
                        .WithMany("Elections")
                        .HasForeignKey("WatermarkId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("BallotSpec");

                    b.Navigation("County");

                    b.Navigation("Watermark");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.PartyModel", b =>
                {
                    b.HasOne("DigitalBallotPlatform.Shared.Models.ElectionSetupModel", "Election")
                        .WithMany("Parties")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DigitalBallotPlatform.Shared.Models.WatermarkColorModel", "WatermarkColor")
                        .WithMany("Parties")
                        .HasForeignKey("WatermarkColorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Election");

                    b.Navigation("WatermarkColor");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.PlatformUserModel", b =>
                {
                    b.HasOne("DigitalBallotPlatform.Shared.Models.CompanyModel", "Company")
                        .WithMany("PlatformUsers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DigitalBallotPlatform.Shared.Models.CountyModel", "County")
                        .WithMany("PlatformUsers")
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DigitalBallotPlatform.Shared.Models.RoleModel", "Role")
                        .WithMany("PlatformUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("County");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.RoleModel", b =>
                {
                    b.HasOne("DigitalBallotPlatform.Shared.Models.CompanyModel", null)
                        .WithMany("Roles")
                        .HasForeignKey("CompanyModelId");

                    b.HasOne("DigitalBallotPlatform.Shared.Models.CountyModel", null)
                        .WithMany("Roles")
                        .HasForeignKey("CountyModelId");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.AddressModel", b =>
                {
                    b.Navigation("Company");

                    b.Navigation("County");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.BallotSpecModel", b =>
                {
                    b.Navigation("BallotCategories");

                    b.Navigation("Elections");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.CompanyModel", b =>
                {
                    b.Navigation("BallotMaterials");

                    b.Navigation("PlatformUsers");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.CountyModel", b =>
                {
                    b.Navigation("ElectionSetups");

                    b.Navigation("PlatformUsers");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.ElectionSetupModel", b =>
                {
                    b.Navigation("Parties");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.RoleModel", b =>
                {
                    b.Navigation("PlatformUsers");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.WatermarkColorModel", b =>
                {
                    b.Navigation("Parties");
                });

            modelBuilder.Entity("DigitalBallotPlatform.Shared.Models.WatermarkModel", b =>
                {
                    b.Navigation("Elections");
                });
#pragma warning restore 612, 618
        }
    }
}
